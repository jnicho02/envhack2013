OpenLayers.Editor=OpenLayers.Class({map:null,id:null,editLayer:null,editorPanel:null,editMode:false,dialog:null,showStatus:null,activeControls:[],editorControls:['CleanFeature','DeleteFeature','Dialog','DrawHole','DrawPolygon','DrawPath','DrawPoint','EditorPanel','ImportFeature','MergeFeature','SaveFeature','SnappingSettings','SplitFeature'],featureTypes:['point','path','polygon'],sourceLayers:[],params:{},geoJSON:new OpenLayers.Format.GeoJSON(),options:{},oleUrl:'',initialize:function(map,options){OpenLayers.Util.extend(this,options);if(map instanceof OpenLayers.Map){this.map=map;}else{this.map=new OpenLayers.Map();}
if(!options){options={};}
if(!options.dialog){this.dialog=new OpenLayers.Editor.Control.Dialog();this.map.addControl(this.dialog);}
this.id=OpenLayers.Util.createUniqueID('OpenLayers.Editor_');this.undoRedo=new OpenLayers.Editor.Control.UndoRedo();this.editLayer=new OpenLayers.Layer.Vector('Editor',{displayInLayerSwitcher:false,styleMap:new OpenLayers.StyleMap({'default':new OpenLayers.Style({fillColor:'#07f',fillOpacity:0.8,strokeColor:'#037',strokeWidth:2,graphicZIndex:1,pointRadius:5}),'select':new OpenLayers.Style({fillColor:'#fc0',strokeColor:'#f70',graphicZIndex:2}),'temporary':new OpenLayers.Style({fillColor:'#fc0',fillOpacity:0.8,strokeColor:'#f70',strokeWidth:2,graphicZIndex:2,pointRadius:5})})})
this.editLayer.events.register('featureadded',this.undoRedo,this.undoRedo.register);this.editLayer.events.register('afterfeaturemodified',this.undoRedo,this.undoRedo.register);var selectionContext={editor:this,layer:this.editLayer,controls:['OpenLayers.Editor.Control.DeleteFeature','OpenLayers.Editor.Control.CleanFeature','OpenLayers.Editor.Control.MergeFeature','OpenLayers.Editor.Control.SplitFeature']};this.editLayer.events.register('featureselected',selectionContext,this.selectionChanged);this.editLayer.events.register('featureunselected',selectionContext,this.selectionChanged);for(var i=0,il=this.featureTypes.length;i<il;i++){if(this.featureTypes[i]=='polygon'){this.activeControls.push('DrawPolygon');}
else if(this.featureTypes[i]=='path'){this.activeControls.push('DrawPath');}
else if(this.featureTypes[i]=='point'){this.activeControls.push('DrawPoint');}}
for(var i=0,il=this.sourceLayers.length;i<il;i++){var selectionContext={editor:this,layer:this.sourceLayers[i],controls:['OpenLayers.Editor.Control.ImportFeature']};this.sourceLayers[i].events.register('featureselected',selectionContext,this.selectionChanged);this.sourceLayers[i].events.register('featureunselected',selectionContext,this.selectionChanged);this.sourceLayers[i].styleMap=new OpenLayers.StyleMap({'default':new OpenLayers.Style({fillColor:'#0c0',fillOpacity:0.8,strokeColor:'#070',strokeWidth:2,graphicZIndex:1,pointRadius:5}),'select':new OpenLayers.Style({fillColor:'#fc0',strokeColor:'#f70',graphicZIndex:2}),'temporary':new OpenLayers.Style({fillColor:'#fc0',fillOpacity:0.8,strokeColor:'#f70',strokeWidth:2,graphicZIndex:2,pointRadius:5})});this.map.addLayer(this.sourceLayers[i]);}
this.map.editor=this;this.map.addLayer(this.editLayer);this.map.addControl(new OpenLayers.Editor.Control.LayerSettings(this));this.map.addControl(this.undoRedo);return this;},selectionChanged:function(){if(this.layer.selectedFeatures.length>0){for(var ic=0,lic=this.controls.length;ic<lic;ic++){var control=this.editor.editorPanel.getControlsByClass(this.controls[ic])[0];if(control){OpenLayers.Element.removeClass(control.panel_div,'oleControlDisabled');}}}else{for(var ic=0,lic=this.controls.length;ic<lic;ic++){var control=this.editor.editorPanel.getControlsByClass(this.controls[ic])[0];if(control){OpenLayers.Element.addClass(control.panel_div,'oleControlDisabled');}}}
this.editor.editorPanel.redraw();},startEditMode:function(){if(!this.editorPanel){this.editorPanel=new OpenLayers.Editor.Control.EditorPanel(this);this.editMode=true;}},stopEditMode:function(){this.map.removeControl(this.editorPanel);this.editorPanel=null;this.map.addControl(new OpenLayers.Control.DragPan({'autoActivate':true}));this.editMode=false;},status:function(options){if(options.type=='error'){alert(options.content);}},loadFeatures:function(features){this.editLayer.destroyFeatures();if(features){this.editLayer.addFeatures(features);this.map.zoomToExtent(this.editLayer.getDataExtent());}
else if(this.options.LoadFeature.url){OpenLayers.Request.GET({url:this.options.LoadFeature.url,params:options.params,callback:this.loadFeaturesComplete,proxy:null,scope:this});}},loadFeaturesComplete:function(request){var geo,responseJSON=new OpenLayers.Format.JSON().read(request.responseText);if(responseJSON.length>0){if(responseJSON[0].error){this.showStatus('error',responseJSON.message);}else{OpenLayers.Util.extend(this.params,responseJSON[0].params);geo=new OpenLayers.Format.GeoJSON().read(responseJSON[0].geo);if(!geo){this.showStatus('error','Geometrie konnte nicht geladen werden.')}else{this.editLayer.addFeatures(this.toFeatures(geo));this.map.zoomToExtent(this.editLayer.getDataExtent());}}}},requestComplete:function(response){var responseJSON=new OpenLayers.Format.JSON().read(response.responseText);this.map.editor.stopWaiting();if(!responseJSON){this.showStatus('error',OpenLayers.i18n('oleNoJSON'))}else if(responseJSON.error){this.showStatus('error',responseJSON.message)}else{if(responseJSON.params){OpenLayers.Util.extend(this.params,responseJSON.params);}
if(responseJSON.geo){var geo=this.geoJSON.read(responseJSON.geo);this.editLayer.removeFeatures(this.editLayer.selectedFeatures);this.editLayer.addFeatures(this.toFeatures(geo));this.editLayer.events.triggerEvent('featureselected');}}},toFeatures:function(multiPolygon){if(multiPolygon===null||typeof(multiPolygon)!=='object'){throw new Error('Parameter does not match expected type.');}
var features=[];if(!(multiPolygon instanceof Array)){multiPolygon=[multiPolygon];}
for(var i=0,li=multiPolygon.length;i<li;i++){if(multiPolygon[i].geometry.CLASS_NAME==='OpenLayers.Geometry.MultiPolygon'||multiPolygon[i].geometry.CLASS_NAME==='OpenLayers.Geometry.Collection'){for(var j=0,lj=multiPolygon[i].geometry.components.length;j<lj;j++){features.push(new OpenLayers.Feature.Vector(multiPolygon[i].geometry.components[j]));}}else if(multiPolygon[i].geometry.CLASS_NAME==='OpenLayers.Geometry.Polygon'){features.push(new OpenLayers.Feature.Vector(multiPolygon[i].geometry));}}
return features;},toMultiPolygon:function(features){var components=[];for(var i=0,l=features.length;i<l;i++){if(features[i].geometry.CLASS_NAME==='OpenLayers.Geometry.Polygon'){components.push(features[i].geometry);}}
return new OpenLayers.Geometry.MultiPolygon(components);},startWaiting:function(panel_div){OpenLayers.Element.addClass(panel_div,'olEditorWaiting');OpenLayers.Element.addClass(this.map.div,'olEditorWaiting');this.waitingDiv=panel_div;},stopWaiting:function(){OpenLayers.Element.removeClass(this.waitingDiv,'olEditorWaiting');OpenLayers.Element.removeClass(this.map.div,'olEditorWaiting');},CLASS_NAME:'OpenLayers.Editor'});OpenLayers.Editor.Control=OpenLayers.Class(OpenLayers.Control,{initialize:function(options){OpenLayers.Control.prototype.initialize.apply(this,[options]);},CLASS_NAME:'OpenLayers.Editor.Control'});OpenLayers.Editor.Control.CleanFeature=OpenLayers.Class(OpenLayers.Control.Button,{proxy:null,title:OpenLayers.i18n('oleCleanFeature'),initialize:function(layer,options){this.layer=layer;OpenLayers.Control.Button.prototype.initialize.apply(this,[options]);this.trigger=this.cleanFeature;this.title=OpenLayers.i18n('oleCleanFeature');this.displayClass="oleControlDisabled "+this.displayClass;},cleanFeature:function(){if(this.layer.selectedFeatures.length>0){var wktFormat=new OpenLayers.Format.WKT(),geo=wktFormat.write(this.layer.selectedFeatures);this.map.editor.startWaiting(this.panel_div);OpenLayers.Request.POST({url:this.map.editor.oleUrl+'process/clean',data:OpenLayers.Util.getParameterString({geo:geo}),headers:{"Content-Type":"application/x-www-form-urlencoded"},callback:this.map.editor.requestComplete,proxy:this.proxy,scope:this.map.editor});}},CLASS_NAME:"OpenLayers.Editor.Control.CleanFeature"});OpenLayers.Editor.Control.DeleteFeature=OpenLayers.Class(OpenLayers.Control.Button,{layer:null,title:OpenLayers.i18n('oleDeleteFeature'),initialize:function(layer,options){this.layer=layer;this.title=OpenLayers.i18n('oleDeleteFeature');OpenLayers.Control.Button.prototype.initialize.apply(this,[options]);this.trigger=this.deleteFeature;this.displayClass="oleControlDisabled "+this.displayClass;},deleteFeature:function(){if(this.layer.selectedFeatures.length>0){this.layer.destroyFeatures(this.layer.selectedFeatures);this.layer.events.triggerEvent('featureunselected');}},CLASS_NAME:'OpenLayers.Editor.Control.DeleteFeature'});OpenLayers.Editor.Control.Dialog=OpenLayers.Class(OpenLayers.Control,{dialogDiv:null,initialize:function(options){OpenLayers.Control.prototype.initialize.apply(this,[options]);},show:function(options){var element,cancelButton,saveButton,okButton;if(OpenLayers.Util.indexOf(this.map.viewPortDiv.childNodes,this.dialogDiv)>-1){this.map.viewPortDiv.removeChild(this.dialogDiv);}
if(!options){options={};}
this.dialogDiv=document.createElement('div');OpenLayers.Element.addClass(this.dialogDiv,'dialog');OpenLayers.Element.addClass(this.div,'fadeMap');if(options.title){element=document.createElement('h3');element.innerHTML=options.title;this.dialogDiv.appendChild(element);}
if(typeof options.content==='string'){element=document.createElement('div');element.innerHTML=options.content;this.dialogDiv.appendChild(element);}else if(OpenLayers.Util.isElement(options.content)){this.dialogDiv.appendChild(options.content);}
if(options.save){cancelButton=document.createElement('input');cancelButton.name='cancel';cancelButton.id='cancelButton';cancelButton.value=OpenLayers.i18n('oleDialogCancelButton');cancelButton.type='button';this.dialogDiv.appendChild(cancelButton);saveButton=document.createElement('input');saveButton.name='save';saveButton.id='saveButton';saveButton.value=OpenLayers.i18n('oleDialogSaveButton');saveButton.type='button';this.dialogDiv.appendChild(saveButton);OpenLayers.Event.observe(cancelButton,'click',this.hide.bind(this));OpenLayers.Event.observe(saveButton,'click',this.hide.bind(this));OpenLayers.Event.observe(saveButton,'click',options.save.bind(this));if(options.cancel){OpenLayers.Event.observe(cancelButton,'click',options.cancel.bind(this));}}else{okButton=document.createElement('input');okButton.name='save';okButton.id='okButton';okButton.value=OpenLayers.i18n('oleDialogOkButton');okButton.type='button';this.dialogDiv.appendChild(okButton);if(options.close){OpenLayers.Event.observe(okButton,'click',options.close);}
OpenLayers.Event.observe(okButton,'click',OpenLayers.Function.bind(this.hide,this));}
this.map.viewPortDiv.appendChild(this.dialogDiv);OpenLayers.Event.observe(this.div,'click',this.ignoreEvent);OpenLayers.Event.observe(this.div,'mousedown',this.ignoreEvent);OpenLayers.Event.observe(this.div,'dblclick',this.ignoreEvent);OpenLayers.Event.observe(this.dialogDiv,'mousedown',this.ignoreEvent);OpenLayers.Event.observe(this.dialogDiv,'dblclick',this.ignoreEvent);},hide:function(){this.map.viewPortDiv.removeChild(this.dialogDiv);OpenLayers.Element.removeClass(this.div,'fadeMap');},ignoreEvent:function(event){OpenLayers.Event.stop(event,true);},CLASS_NAME:'OpenLayers.Editor.Control.Dialog'});OpenLayers.Editor.Control.DrawHole=OpenLayers.Class(OpenLayers.Control.DrawFeature,{minArea:0,title:OpenLayers.i18n('oleDrawHole'),initialize:function(layer,options){OpenLayers.Control.DrawFeature.prototype.initialize.apply(this,[layer,OpenLayers.Handler.Polygon,options]);this.title=OpenLayers.i18n('oleDrawHole');},drawFeature:function(geometry){var feature=new OpenLayers.Feature.Vector(geometry),proceed=this.layer.events.triggerEvent('sketchcomplete',{feature:feature}),vertices=geometry.getVertices(),intersects;if(proceed!==false&&geometry.getArea()>=this.minArea){feature.state=OpenLayers.State.INSERT;features:for(var i=0,li=this.layer.features.length;i<li;i++){var layerFeature=this.layer.features[i];intersects=true;for(var j=0,lj=vertices.length;j<lj;j++){if(!layerFeature.geometry.intersects(vertices[j])){intersects=false;}}
if(intersects){this.layer.removeFeatures([layerFeature]);layerFeature.geometry.components.push(geometry.components[0]);this.layer.addFeatures([layerFeature]);break features;}}}},CLASS_NAME:'OpenLayers.Editor.Control.DrawHole'});OpenLayers.Editor.Control.DrawPath=OpenLayers.Class(OpenLayers.Control.DrawFeature,{minLength:0,title:OpenLayers.i18n('oleDrawPath'),initialize:function(layer,options){OpenLayers.Control.DrawFeature.prototype.initialize.apply(this,[layer,OpenLayers.Handler.Path,options]);},drawFeature:function(geometry){var feature=new OpenLayers.Feature.Vector(geometry),proceed=this.layer.events.triggerEvent('sketchcomplete',{feature:feature});if(proceed!==false&&geometry.getLength()>=this.minLength){feature.state=OpenLayers.State.INSERT;this.layer.addFeatures([feature]);this.featureAdded(feature);this.events.triggerEvent('featureadded',{feature:feature});}},CLASS_NAME:'OpenLayers.Editor.Control.DrawPath'});OpenLayers.Editor.Control.DrawPoint=OpenLayers.Class(OpenLayers.Control.DrawFeature,{title:OpenLayers.i18n('oleDrawPoint'),initialize:function(layer,options){OpenLayers.Control.DrawFeature.prototype.initialize.apply(this,[layer,OpenLayers.Handler.Point,options]);},drawFeature:function(geometry){var feature=new OpenLayers.Feature.Vector(geometry),proceed=this.layer.events.triggerEvent('sketchcomplete',{feature:feature});if(proceed!==false){feature.state=OpenLayers.State.INSERT;this.layer.addFeatures([feature]);this.featureAdded(feature);this.events.triggerEvent('featureadded',{feature:feature});}},CLASS_NAME:'OpenLayers.Editor.Control.DrawPoint'});OpenLayers.Editor.Control.DrawPolygon=OpenLayers.Class(OpenLayers.Control.DrawFeature,{minArea:0,title:OpenLayers.i18n('oleDrawPolygon'),initialize:function(layer,options){OpenLayers.Control.DrawFeature.prototype.initialize.apply(this,[layer,OpenLayers.Handler.Polygon,options]);this.title=OpenLayers.i18n('oleDrawPolygon');},drawFeature:function(geometry){var feature=new OpenLayers.Feature.Vector(geometry),proceed=this.layer.events.triggerEvent('sketchcomplete',{feature:feature});if(proceed!==false&&geometry.getArea()>=this.minArea){feature.state=OpenLayers.State.INSERT;this.layer.addFeatures([feature]);this.featureAdded(feature);this.events.triggerEvent('featureadded',{feature:feature});}},CLASS_NAME:'OpenLayers.Editor.Control.DrawPolygon'});OpenLayers.Editor.Control.EditorPanel=OpenLayers.Class(OpenLayers.Control.Panel,{initialize:function(editor,options){OpenLayers.Control.Panel.prototype.initialize.apply(this,[options]);var control=null,controls=[];for(var i=0,len=editor.activeControls.length;i<len;i++){control=editor.activeControls[i];if(OpenLayers.Util.indexOf(editor.editorControls,control)>-1){controls.push(new OpenLayers.Editor.Control[control](editor.editLayer,editor.options[control]));}
switch(control){case'Separator':controls.push(new OpenLayers.Control.Button({displayClass:'olControlSeparator'}));break;case'Navigation':controls.push(new OpenLayers.Control.Navigation(OpenLayers.Util.extend({title:OpenLayers.i18n('oleNavigation')},editor.options.Navigation)));break;case'DragFeature':controls.push(new OpenLayers.Control.DragFeature(editor.editLayer,OpenLayers.Util.extend({title:OpenLayers.i18n('oleDragFeature'),onComplete:function(feature,pixel){editor.editLayer.events.triggerEvent('afterfeaturemodified',{feature:feature});}},editor.options.DragFeature)));break;case'ModifyFeature':controls.push(new OpenLayers.Control.ModifyFeature(editor.editLayer,OpenLayers.Util.extend({title:OpenLayers.i18n('oleModifyFeature')},editor.options.ModifyFeature)));break;case'SelectFeature':controls.push(new OpenLayers.Control.SelectFeature(editor.sourceLayers.concat([editor.editLayer]),OpenLayers.Util.extend({title:OpenLayers.i18n('oleSelectFeature'),clickout:true,toggle:false,multiple:false,hover:false,toggleKey:"ctrlKey",multipleKey:"ctrlKey",box:true},editor.options.SelectFeature)));break;default:break;}}
this.addControls(controls);editor.map.addControl(this);},CLASS_NAME:'OpenLayers.Editor.Control.EditorPanel'});OpenLayers.Editor.Control.ImportFeature=OpenLayers.Class(OpenLayers.Control.Button,{layer:null,title:OpenLayers.i18n('oleImportFeature'),initialize:function(layer,options){this.layer=layer;OpenLayers.Control.Button.prototype.initialize.apply(this,[options]);this.trigger=this.importFeature;this.title=OpenLayers.i18n('oleImportFeature');this.displayClass="oleControlDisabled "+this.displayClass;},importFeature:function(){var importFeatures=[];if(this.map.editor.sourceLayers.length>0){for(var i=0,li=this.map.editor.sourceLayers.length;i<li;i++){for(var j=0,lj=this.map.editor.sourceLayers[i].selectedFeatures.length;j<lj;j++){this.map.editor.sourceLayers[i].selectedFeatures[j].renderIntent='default';importFeatures.push(this.map.editor.sourceLayers[i].selectedFeatures[j]);}
this.map.editor.sourceLayers[i].removeFeatures(this.map.editor.sourceLayers[i].selectedFeatures);this.map.editor.sourceLayers[i].events.triggerEvent('featureunselected');}
if(importFeatures.length>0){this.layer.addFeatures(importFeatures);}else{return this.map.editor.showStatus('error',OpenLayers.i18n('oleImportFeatureSourceFeature'));}}else{return this.map.editor.showStatus('error',OpenLayers.i18n('oleImportFeatureSourceLayer'));}},CLASS_NAME:'OpenLayers.Editor.Control.ImportFeature'});OpenLayers.Editor.Control.LayerSettings=OpenLayers.Class(OpenLayers.Control,{currentLayer:null,layerSwitcher:null,initialize:function(editor,options){OpenLayers.Control.prototype.initialize.apply(this,[options]);this.layerSwitcher=editor.map.getControlsByClass('OpenLayers.Control.LayerSwitcher')[0];if(this.layerSwitcher instanceof OpenLayers.Control.LayerSwitcher){OpenLayers.Event.observe(this.layerSwitcher.maximizeDiv,'click',OpenLayers.Function.bind(this.redraw,this));}},redraw:function(){var layerInput,layerLabel;this.layerSwitcher.dataLayersDiv.innerHTML="";for(var i=0,l=this.layerSwitcher.dataLayers.length;i<l;i++){var dataLayer=this.layerSwitcher.dataLayers[i];layerInput=document.createElement('input');layerInput.type='checkbox';layerInput.id='list'+dataLayer.layer.name;layerInput.name=dataLayer.layer.name;if(dataLayer.layer.visibility){layerInput.checked='checked';layerInput.defaultChecked='selected';}
this.layerSwitcher.dataLayersDiv.appendChild(layerInput);layerLabel=document.createElement('span');layerLabel.innerHTML=dataLayer.layer.name;OpenLayers.Element.addClass(layerLabel,'labelSpan');this.layerSwitcher.dataLayersDiv.appendChild(layerLabel);this.layerSwitcher.dataLayersDiv.appendChild(document.createElement('br'));OpenLayers.Event.observe(layerInput,'click',OpenLayers.Function.bind(this.toggleLayerVisibility,this,dataLayer.layer.name));OpenLayers.Event.observe(layerLabel,'click',OpenLayers.Function.bind(this.showLayerSettings,this,dataLayer.layer.name));}},showLayerSettings:function(layerName){var content,opacityHeader,opacityTrack,opacityHandle,opacityInput,legendHeader,legendGraphic,importHeader,importInput,importLabel;this.currentLayer=this.map.getLayersByName(layerName)[0];var content=document.createElement('div');var opacityHeader=document.createElement('h4');opacityHeader.innerHTML=OpenLayers.i18n('oleLayerSettingsOpacityHeader');content.appendChild(opacityHeader);var opacity=(this.currentLayer.opacity)?this.currentLayer.opacity:1;opacityInput=document.createElement('input');opacityInput.type='text';opacityInput.size='2';opacityInput.value=(opacity*100).toFixed(0);OpenLayers.Event.observe(opacityInput,'change',OpenLayers.Function.bind(this.changeLayerOpacity,this,opacityInput));content.appendChild(opacityInput);if(this.currentLayer instanceof OpenLayers.Layer.Vector){importHeader=document.createElement('h4');importHeader.innerHTML=OpenLayers.i18n('oleLayerSettingsImportHeader');importHeader.style.marginTop='10px';content.appendChild(importHeader);importInput=document.createElement('input');importInput.type='checkbox';importInput.name='import'+this.currentLayer.name;content.appendChild(importInput);importLabel=document.createElement('label');importLabel.htmlFor='import'+this.currentLayer.name;importLabel.innerHTML=OpenLayers.i18n('oleLayerSettingsImportLabel');content.appendChild(importLabel);content.appendChild(document.createElement('p'));for(var i=0,li=this.map.editor.sourceLayers.length;i<li;i++){if(this.currentLayer.id==this.map.editor.sourceLayers[i].id){importInput.writeAttribute('checked','checked');importInput.defaultChecked='selected';break;}}
OpenLayers.Event.observe(importInput,'click',OpenLayers.Function.bind(this.toggleExportFeature,this));}
var legendGraphics=this.getLegendGraphics(this.currentLayer);if(legendGraphics.length>0){legendHeader=document.createElement('h4');legendHeader.innerHTML=OpenLayers.i18n('oleLayerSettingsLegendHeader');legendHeader.style.marginTop='10px';content.appendChild(legendHeader);for(var i=0;i<legendGraphics.length;i++){legendGraphic=document.createElement('img');legendGraphic.src=legendGraphics[i];content.appendChild(legendGraphic);}}
this.map.editor.dialog.show({content:content,title:layerName});},toggleExportFeature:function(){var add=true;for(var i=0,li=this.map.editor.sourceLayers.length;i<li;i++){if(this.currentLayer.id==this.map.editor.sourceLayers[i].id){this.map.editor.sourceLayers.splice(i,1);add=false;break;}}
if(add){this.map.editor.sourceLayers.push(this.currentLayer);}},toggleLayerVisibility:function(layerName){var layer=this.map.getLayersByName(layerName)[0];if(layer.visibility){layer.setVisibility(false);}else{layer.setVisibility(true);}
this.redraw();},changeLayerOpacity:function(opacityInput){this.currentLayer.setOpacity(opacityInput.value/100);},getLegendGraphics:function(layer){var legendGraphics=[];if(layer.legendGraphics){legendGraphics=layer.legendGraphics;}else if(layer instanceof OpenLayers.Layer.WMS){var urlLayers=layer.params.LAYERS.split(',');for(var j=0;j<urlLayers.length;j++){var singlelayer=urlLayers[j];var url=layer.url;url+=(url.indexOf('?')===-1)?'?':'';url+='&SERVICE=WMS';url+='&VERSION=1.1.1';url+='&REQUEST=GetLegendGraphic';url+='&FORMAT=image/png';url+='&LAYER='+singlelayer;legendGraphics.push(url);}}
return legendGraphics;},CLASS_NAME:'OpenLayers.Editor.Control.LayerSettings'});OpenLayers.Editor.Control.MergeFeature=OpenLayers.Class(OpenLayers.Control.Button,{proxy:null,title:OpenLayers.i18n('oleMergeFeature'),initialize:function(layer,options){this.layer=layer;OpenLayers.Control.Button.prototype.initialize.apply(this,[options]);this.trigger=this.mergeFeature;this.title=OpenLayers.i18n('oleMergeFeature');this.displayClass="oleControlDisabled "+this.displayClass;},mergeFeature:function(){if(this.layer.selectedFeatures.length<2){this.map.editor.showStatus('error',OpenLayers.i18n('oleMergeFeatureSelectFeature'));}else{var wktFormat=new OpenLayers.Format.WKT(),geo=wktFormat.write(this.layer.selectedFeatures);this.map.editor.startWaiting(this.panel_div);OpenLayers.Request.POST({url:this.map.editor.oleUrl+'process/merge',data:OpenLayers.Util.getParameterString({geo:geo}),headers:{"Content-Type":"application/x-www-form-urlencoded"},callback:this.map.editor.requestComplete,proxy:this.proxy,scope:this.map.editor});}},CLASS_NAME:"OpenLayers.Editor.Control.MergeFeature"});OpenLayers.Editor.Control.SaveFeature=OpenLayers.Class(OpenLayers.Control.Button,{EVENT_TYPES:["featuresaved"],layer:null,url:'',proxy:null,fields:[],textFields:{},title:OpenLayers.i18n('oleSaveFeature'),initialize:function(layer,options){this.layer=layer;OpenLayers.Control.Button.prototype.initialize.apply(this,[options]);this.trigger=this.openSaveDialog;},openSaveDialog:function(){if(this.layer.features.length<0){alert("Keine Objekte vorhanden.");}else{var fieldList=new Element("ul");for(var i=0;i<this.fields.length;i++){var field=this.fields[i];if(field&&field.type!="hidden"&&field.type!="geometry"){var fieldListItem=new Element("li");var fieldLabel=new Element('label',{'for':field.name}).update(field.label+': ');var fieldInput=new Element('input',{'type':field.type,'name':field.name,'id':field.name});fieldListItem.appendChild(fieldLabel);fieldListItem.appendChild(fieldInput);fieldList.appendChild(fieldListItem);fieldInput.observe('click',function(e){e.currentTarget.focus();});this.textFields[field.name]=fieldInput;}}
var content=new Element("div");content.appendChild(fieldList);content.appendChild(new Element("p"));this.map.editor.dialog.show(content,{title:'Änderungen speichern',save:this.saveFeature.bind(this)});}},saveFeature:function(){var multiPolygon=this.map.editor.toMultiPolygon(this.layer.features);var geoJSON=new OpenLayers.Format.GeoJSON().write(multiPolygon);var params=this.map.editor.params;for(var i=0;i<this.fields.length;i++){var field=this.fields[i];if(field.type=='hidden'){params[field.name]=field.value;}else if(field.type=='geometry'){params[field.name]=geoJSON;}else if(field.type=='text'){params[field.name]=this.textFields[field.name].value;}}
OpenLayers.Request.POST({url:this.url,params:params,callback:this.saveFeatureComplete,proxy:this.proxy,scope:this});},saveFeatureLoading:function(){this.map.editor.dialog.show('Änderungen werden gespeichert ...');},saveFeatureComplete:function(response){var responseJSON=new OpenLayers.Format.JSON().read(response.responseText);if(!responseJSON){this.events.triggerEvent("featuresaved",response);}else if(responseJSON.error==='true'){this.map.editor.dialog.show(responseJSON.message,{type:'error'});}else{if(responseJSON.params){OpenLayers.Util.extend(this.params,responseJSON.params);}
this.events.triggerEvent("featuresaved",responseJSON);}},CLASS_NAME:"OpenLayers.Editor.Control.SaveFeature"});OpenLayers.Editor.Control.SnappingSettings=OpenLayers.Class(OpenLayers.Control.Button,{title:OpenLayers.i18n('oleSnappingSettings'),layer:null,snapping:new OpenLayers.Control.Snapping(),tolerance:10,snappingLayers:[],layerListDiv:null,toleranceInput:null,initialize:function(layer,options){this.layer=layer;OpenLayers.Control.Button.prototype.initialize.apply(this,[options]);this.trigger=OpenLayers.Function.bind(this.openSnappingDialog,this);this.events.register("deactivate",this,this.onDeactivate);this.title=OpenLayers.i18n('oleSnappingSettings');},onDeactivate:function(){if(this.snapping.active){this.activate();}},openSnappingDialog:function(){this.activate();this.layerListDiv=document.createElement('div');this.layerListDiv.id='layerList';this.layerListDiv.style.marginBottom='10px';var content=document.createElement('div');var toleranceHeader=document.createElement('h4');toleranceHeader.innerHTML=OpenLayers.i18n('oleSnappingSettingsTolerance');content.appendChild(toleranceHeader);this.toleranceInput=document.createElement('input');this.toleranceInput.type='text';this.toleranceInput.value=this.tolerance;content.appendChild(this.toleranceInput);var layerHeader=document.createElement('h4');layerHeader.innerHTML=OpenLayers.i18n('oleSnappingSettingsLayer');content.appendChild(layerHeader);content.appendChild(this.layerListDiv);this.map.editor.dialog.show({content:content,title:OpenLayers.i18n('oleSnappingSettings'),close:OpenLayers.Function.bind(this.changeSnapping,this)});this.redraw();},redraw:function(){var layer,element;this.layerListDiv.innerHTML='';for(var i=0;i<this.map.layers.length;i++){layer=this.map.layers[i];if(!(layer instanceof OpenLayers.Layer.Vector.RootContainer)&&layer instanceof OpenLayers.Layer.Vector&&layer.name.search(/OpenLayers.Handler.+/)==-1){element=document.createElement('input');element.type='checkbox';element.name='snappingLayer';element.id='Snapping.'+layer.id;element.value='true';if(this.snappingLayers.indexOf('Snapping.'+layer.id)>=0){element.checked='checked';element.defaultChecked='selected';}
this.layerListDiv.appendChild(element);OpenLayers.Event.observe(element,'click',OpenLayers.Function.bind(this.addSnappingLayer,this));element=document.createElement('label');element.setAttribute('for','Snapping.'+layer.id);element.innerHTML=layer.name;this.layerListDiv.appendChild(element);this.layerListDiv.appendChild(document.createElement('br'));}}},addSnappingLayer:function(event){if(this.snappingLayers.indexOf(event.currentTarget.id)>=0){this.snappingLayers.splice(this.snappingLayers.indexOf(event.currentTarget.id),1);}else{this.snappingLayers.push(event.currentTarget.id);}
this.redraw();},changeSnapping:function(){this.tolerance=parseInt(this.toleranceInput.value);if(this.snappingLayers.length>0){this.snapping.deactivate();var targets=[];for(var i=0;i<this.snappingLayers.length;i++){targets.push({layer:this.map.getLayersBy('id',this.snappingLayers[i].substr(9))[0],tolerance:this.tolerance});}
this.snapping=new OpenLayers.Control.Snapping({layer:this.layer,targets:targets});for(var i=0;i<targets;i++){targets[i].layer.redraw();targets[i].layer.setVisibility(true);}
this.snapping.activate();}else{if(this.snapping.active){this.snapping.deactivate();this.snapping.targets=null;}}
if(!this.snapping.active)this.deactivate();},CLASS_NAME:"OpenLayers.Editor.Control.SnappingSettings"});OpenLayers.Editor.Control.SplitFeature=OpenLayers.Class(OpenLayers.Control.DrawFeature,{proxy:null,title:OpenLayers.i18n('oleSplitFeature'),initialize:function(layer,options){OpenLayers.Control.DrawFeature.prototype.initialize.apply(this,[layer,OpenLayers.Handler.Path,options]);this.events.register('activate',this,this.test);this.title=OpenLayers.i18n('oleSplitFeature');this.displayClass="oleControlDisabled "+this.displayClass;},test:function(){if(this.layer.selectedFeatures.length<1){this.deactivate();}},drawFeature:function(geometry){var feature=new OpenLayers.Feature.Vector(geometry);var wktFormat=new OpenLayers.Format.WKT();var proceed=this.layer.events.triggerEvent('sketchcomplete',{feature:feature});this.deactivate();if(proceed!==false){if(this.layer.selectedFeatures.length>0){var geo=wktFormat.write(this.layer.selectedFeatures),cut=wktFormat.write(feature);this.map.editor.startWaiting(this.panel_div);OpenLayers.Request.POST({url:this.map.editor.oleUrl+'process/split',data:OpenLayers.Util.getParameterString({cut:cut,geo:geo}),headers:{"Content-Type":"application/x-www-form-urlencoded"},callback:this.map.editor.requestComplete,proxy:this.proxy,scope:this.map.editor});}}},CLASS_NAME:'OpenLayers.Editor.Control.SplitFeature'});OpenLayers.Editor.Control.UndoRedo=OpenLayers.Class(OpenLayers.Control,{handler:null,autoActivate:true,KEY_Z:90,KEY_Y:89,onUndo:function(){},onRedo:function(){},onRemoveFeature:function(){},undoStack:null,redoStack:null,currentState:null,initialize:function(){OpenLayers.Control.prototype.initialize.apply(this,arguments);this.undoStack=new Array();this.redoStack=new Array();},draw:function(){this.handler=new OpenLayers.Handler.Keyboard(this,{"keydown":this.handleKeydown});},handleKeydown:function(e){if(e.keyCode===this.KEY_Z&&e.ctrlKey===true&&e.shiftKey===false){this.undo();}
else if(e.ctrlKey===true&&((e.keyCode===this.KEY_Y)||(e.keyCode===this.KEY_Z&&e.shiftKey===true))){this.redo();}},undo:function(){var feature=this.moveBetweenStacks(this.undoStack,this.redoStack,true);if(feature)this.onUndo(feature);},redo:function(){var feature=this.moveBetweenStacks(this.redoStack,this.undoStack,false);if(feature)this.onRedo(feature);},moveBetweenStacks:function(fromStack,toStack,undo){if(fromStack.length>0){this.map.editor.editLayer.removeAllFeatures();var state=fromStack.pop();toStack.push(this.currentState);if(state){var currentFeatures=new Array(len);var len=state.length;for(var i=0;i<len;++i){currentFeatures[i]=state[i].clone();}
this.currentState=currentFeatures;this.map.editor.editLayer.addFeatures(state,{silent:true});}else{this.currentState=null;}}
else if(this.currentState&&undo){toStack.push(this.currentState);this.map.editor.editLayer.removeAllFeatures();this.currentState=null;}},register:function(){var features=this.map.editor.editLayer.features;var len=features.length;var clonedFeatures=new Array(len);for(var i=0;i<len;++i){clonedFeatures[i]=features[i].clone();}
if(this.currentState){this.undoStack.push(this.currentState);}
this.currentState=clonedFeatures;this.redoStack=new Array();},CLASS_NAME:"OpenLayers.Editor.Control.UndoRedo"});OpenLayers.Util.extend(OpenLayers.Lang.de,{'oleCleanFeature':'Selektierte Geometrien bereinigen','oleCleanFeatureSelectFeature':'Bitte eine Geometrie zum bereinigen auswählen.','oleDeleteFeature':'Selektierte Geometrien löschen','oleDeleteFeatureSelectFeature':'Bitte eine Geometrie zum löschen auswählen.','oleDialogCancelButton':'Abbrechen','oleDialogSaveButton':'Speichern','oleDialogOkButton':'Ok','oleDragFeature':'Geometrie verschieben','oleDrawHole':'Loch schneiden','oleDrawPolygon':'Fläche erstellen','oleImportFeature':'Selektierte Geometrien importieren','oleImportFeatureSourceLayer':'Keine Ebenen für den Import gefunden','oleImportFeatureSourceFeature':'Keine selektierten Geometrien für den Import gefunden.','oleLayerSettingsImportHeader':'Import','oleLayerSettingsImportLabel':'Layer als Quelle für Import verwenden','oleLayerSettingsLegendHeader':'Legende','oleLayerSettingsOpacityHeader':'Opazität in %','oleMergeFeature':'Selektierte Geometrien verschmelzen','oleMergeFeatureSelectFeature':'Bitte mindestens 2 Flächen auswählen.','oleModifyFeature':'Geometrien bearbeiten','oleNavigation':'Navigation','oleSaveFeature':'Änderungen speichern','oleSelectFeature':'Geometrien selektieren','oleSnappingSettings':'Snapping Einstellungen','oleSnappingSettingsLayer':'Snapping Layer','oleSnappingSettingsTolerance':'Snapping Toleranz','oleSplitFeature':'Selektierte Geometrien teilen','oleSplitFeatureSelectFeature':'Bitte mindestens 1 Flächen auswählen.'});